package com.tresfocus.ekart.hibernate.entity;

// Generated May 10, 2014 2:51:46 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.Version;

import org.codehaus.jackson.annotate.JsonIgnore;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamOmitField;

/**
 * Category generated by hbm2java
 */
@XStreamAlias("category")
@Entity
public class Category implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private String name;
	private Date creationDate;
	private Date lastUpdatedDate;
	private int createdBy;
	private int lastUpdatedBy;
	private String image;
	@XStreamOmitField	
	@JsonIgnore
	private CategoryType categoryType;
	@XStreamOmitField	
	@JsonIgnore
	private Category parentCategory;
	@Version
	private int objectVersionNumber;
	@XStreamOmitField
	@JsonIgnore
	private Set<Product> products = new HashSet<Product>(0);
	@XStreamOmitField	
	@JsonIgnore
	private Set<RetailerCategory> retailerCategories = new HashSet<RetailerCategory>(
			0);
	@XStreamOmitField
	@JsonIgnore
	private Set<CategoryType> categoryTypes = new HashSet<CategoryType>(0);

	public Category() {
	}

	public Category(String name, Date creationDate, Date lastUpdatedDate,
			int createdBy, int lastUpdatedBy, int objectVersionNumber) {
		this.name = name;
		this.creationDate = creationDate;
		this.lastUpdatedDate = lastUpdatedDate;
		this.createdBy = createdBy;
		this.lastUpdatedBy = lastUpdatedBy;
		this.objectVersionNumber = objectVersionNumber;
	}

	public Category(String name, Date creationDate, Date lastUpdatedDate,
			int createdBy, int lastUpdatedBy, int objectVersionNumber, String image,
			Set<Product> products, Set<RetailerCategory> retailerCategories) {
		this.name = name;
		this.creationDate = creationDate;
		this.lastUpdatedDate = lastUpdatedDate;
		this.createdBy = createdBy;
		this.lastUpdatedBy = lastUpdatedBy;
		this.objectVersionNumber = objectVersionNumber;
		this.image = image;
		this.products = products;
		this.retailerCategories = retailerCategories;
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	public Date getLastUpdatedDate() {
		return this.lastUpdatedDate;
	}

	public void setLastUpdatedDate(Date lastUpdatedDate) {
		this.lastUpdatedDate = lastUpdatedDate;
	}

	public int getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(int createdBy) {
		this.createdBy = createdBy;
	}

	public int getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(int lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	public int getObjectVersionNumber() {
		return this.objectVersionNumber;
	}

	public void setObjectVersionNumber(int objectVersionNumber) {
		this.objectVersionNumber = objectVersionNumber;
	}

	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

	public Set<RetailerCategory> getRetailerCategories() {
		return this.retailerCategories;
	}

	public void setRetailerCategories(Set<RetailerCategory> retailerCategories) {
		this.retailerCategories = retailerCategories;
	}
	public Set<CategoryType> getCategoryTypes() {
		return categoryTypes;
	}

	public void setCategoryTypes(Set<CategoryType> categoryTypes) {
		this.categoryTypes = categoryTypes;
	}
	public CategoryType getCategoryType() {
		return categoryType;
	}

	public void setCategoryType(CategoryType categoryType) {
		this.categoryType = categoryType;
	}

	
	
	public Category getParentCategory() {
		return parentCategory;
	}

	public void setParentCategory(Category parentCategory) {
		this.parentCategory = parentCategory;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Category [id=");
		builder.append(id);
		builder.append(", name=");
		builder.append(name);
		builder.append(", creationDate=");
		builder.append(creationDate);
		builder.append(", lastUpdatedDate=");
		builder.append(lastUpdatedDate);
		builder.append(", createdBy=");
		builder.append(createdBy);
		builder.append(", lastUpdatedBy=");
		builder.append(lastUpdatedBy);
		builder.append(", objectVersionNumber=");
		builder.append(objectVersionNumber);
		builder.append("]");
		return builder.toString();
	}
	
	public static void initializeXStream(XStream xstreamObj) {
		xstreamObj.alias("", java.sql.Timestamp.class, java.util.Date.class);		
	}
}
